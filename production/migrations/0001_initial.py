# Generated by Django 5.2 on 2025-06-25 19:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_number', models.CharField(max_length=50, unique=True, verbose_name='Plan No')),
                ('name', models.CharField(max_length=200, verbose_name='Plan Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('status', models.CharField(choices=[('draft', 'Taslak'), ('approved', 'Onaylandı'), ('in_progress', 'Devam Ediyor'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='draft', max_length=20, verbose_name='Durum')),
                ('priority', models.CharField(choices=[('low', 'Düşük'), ('normal', 'Normal'), ('high', 'Yüksek'), ('urgent', 'Acil')], default='normal', max_length=10, verbose_name='Öncelik')),
                ('planned_start_date', models.DateField(verbose_name='Planlanan Başlangıç Tarihi')),
                ('planned_end_date', models.DateField(verbose_name='Planlanan Bitiş Tarihi')),
                ('actual_start_date', models.DateField(blank=True, null=True, verbose_name='Gerçek Başlangıç Tarihi')),
                ('actual_end_date', models.DateField(blank=True, null=True, verbose_name='Gerçek Bitiş Tarihi')),
                ('total_estimated_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Tahmini Maliyet')),
                ('total_actual_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Gerçek Maliyet')),
                ('approved_at', models.DateTimeField(blank=True, null=True, verbose_name='Onaylanma Tarihi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_production_plans', to=settings.AUTH_USER_MODEL, verbose_name='Onaylayan')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_plans', to='users.branch', verbose_name='Üretim Merkezi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_production_plans', to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
            ],
            options={
                'verbose_name': 'Üretim Planı',
                'verbose_name_plural': 'Üretim Planları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductionPlanItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('planned_quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Planlanan Miktar')),
                ('produced_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Üretilen Miktar')),
                ('estimated_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Tahmini Maliyet')),
                ('actual_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Gerçek Maliyet')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_plan_items', to='inventory.product', verbose_name='Ürün')),
                ('production_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='production.productionplan', verbose_name='Üretim Planı')),
            ],
            options={
                'verbose_name': 'Üretim Planı Kalemi',
                'verbose_name_plural': 'Üretim Planı Kalemleri',
            },
        ),
        migrations.CreateModel(
            name='ProductionBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50, unique=True, verbose_name='Parti No')),
                ('planned_quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Planlanan Miktar')),
                ('actual_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Gerçek Miktar')),
                ('waste_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Fire Miktarı')),
                ('status', models.CharField(choices=[('planned', 'Planlandı'), ('in_progress', 'Devam Ediyor'), ('quality_check', 'Kalite Kontrolde'), ('completed', 'Tamamlandı'), ('failed', 'Başarısız'), ('cancelled', 'İptal Edildi')], default='planned', max_length=20, verbose_name='Durum')),
                ('scheduled_start', models.DateTimeField(verbose_name='Planlanan Başlangıç')),
                ('scheduled_end', models.DateTimeField(verbose_name='Planlanan Bitiş')),
                ('actual_start', models.DateTimeField(blank=True, null=True, verbose_name='Gerçek Başlangıç')),
                ('actual_end', models.DateTimeField(blank=True, null=True, verbose_name='Gerçek Bitiş')),
                ('material_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Malzeme Maliyeti')),
                ('labor_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='İşçilik Maliyeti')),
                ('overhead_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Genel Gider')),
                ('production_notes', models.TextField(blank=True, verbose_name='Üretim Notları')),
                ('quality_notes', models.TextField(blank=True, verbose_name='Kalite Notları')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('assigned_workers', models.ManyToManyField(blank=True, related_name='production_batches', to=settings.AUTH_USER_MODEL, verbose_name='Atanan Çalışanlar')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_batches', to='inventory.recipe', verbose_name='Reçete')),
                ('supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_batches', to=settings.AUTH_USER_MODEL, verbose_name='Süpervizör')),
                ('production_plan_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='production.productionplanitem', verbose_name='Üretim Planı Kalemi')),
            ],
            options={
                'verbose_name': 'Üretim Partisi',
                'verbose_name_plural': 'Üretim Partileri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductionReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_number', models.CharField(max_length=50, unique=True, verbose_name='Rapor No')),
                ('report_type', models.CharField(choices=[('daily', 'Günlük Rapor'), ('weekly', 'Haftalık Rapor'), ('monthly', 'Aylık Rapor'), ('batch', 'Parti Raporu')], max_length=20, verbose_name='Rapor Tipi')),
                ('report_date', models.DateField(default=django.utils.timezone.now, verbose_name='Rapor Tarihi')),
                ('period_start', models.DateField(verbose_name='Dönem Başlangıcı')),
                ('period_end', models.DateField(verbose_name='Dönem Sonu')),
                ('total_batches', models.IntegerField(default=0, verbose_name='Toplam Parti Sayısı')),
                ('successful_batches', models.IntegerField(default=0, verbose_name='Başarılı Parti Sayısı')),
                ('failed_batches', models.IntegerField(default=0, verbose_name='Başarısız Parti Sayısı')),
                ('total_planned_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Planlanan Miktar')),
                ('total_produced_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Üretilen Miktar')),
                ('total_waste_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Fire Miktarı')),
                ('total_material_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Malzeme Maliyeti')),
                ('total_labor_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam İşçilik Maliyeti')),
                ('total_overhead_cost', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Toplam Genel Gider')),
                ('summary', models.TextField(blank=True, verbose_name='Özet')),
                ('recommendations', models.TextField(blank=True, verbose_name='Öneriler')),
                ('generated_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='production_reports', to='users.branch', verbose_name='Şube')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
            ],
            options={
                'verbose_name': 'Üretim Raporu',
                'verbose_name_plural': 'Üretim Raporları',
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='QualityCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_type', models.CharField(choices=[('raw_material', 'Hammadde Kontrolü'), ('in_process', 'Süreç İçi Kontrol'), ('final_product', 'Nihai Ürün Kontrolü'), ('packaging', 'Ambalaj Kontrolü')], max_length=20, verbose_name='Kontrol Tipi')),
                ('check_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Kontrol Tarihi')),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Sıcaklık (°C)')),
                ('humidity', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Nem (%)')),
                ('ph_level', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(14)], verbose_name='pH Seviyesi')),
                ('appearance_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Görünüm Puanı')),
                ('texture_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Doku Puanı')),
                ('taste_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Tat Puanı')),
                ('aroma_score', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Aroma Puanı')),
                ('overall_result', models.CharField(choices=[('pass', 'Geçti'), ('fail', 'Kaldı'), ('conditional', 'Şartlı Geçti')], max_length=20, verbose_name='Genel Sonuç')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('corrective_actions', models.TextField(blank=True, verbose_name='Düzeltici Eylemler')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quality_checks', to='production.productionbatch', verbose_name='Üretim Partisi')),
                ('checked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Kontrol Eden')),
            ],
            options={
                'verbose_name': 'Kalite Kontrolü',
                'verbose_name_plural': 'Kalite Kontrolleri',
                'ordering': ['-check_date'],
            },
        ),
        migrations.AddIndex(
            model_name='productionplan',
            index=models.Index(fields=['plan_number'], name='production__plan_nu_c6e3ba_idx'),
        ),
        migrations.AddIndex(
            model_name='productionplan',
            index=models.Index(fields=['status'], name='production__status_1155c1_idx'),
        ),
        migrations.AddIndex(
            model_name='productionplan',
            index=models.Index(fields=['planned_start_date'], name='production__planned_b7f9b3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productionplanitem',
            unique_together={('production_plan', 'product')},
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['batch_number'], name='production__batch_n_3f3c95_idx'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['status'], name='production__status_aa5a8e_idx'),
        ),
        migrations.AddIndex(
            model_name='productionbatch',
            index=models.Index(fields=['scheduled_start'], name='production__schedul_f148e1_idx'),
        ),
        migrations.AddIndex(
            model_name='productionreport',
            index=models.Index(fields=['report_number'], name='production__report__d185c7_idx'),
        ),
        migrations.AddIndex(
            model_name='productionreport',
            index=models.Index(fields=['report_type'], name='production__report__a4ac26_idx'),
        ),
        migrations.AddIndex(
            model_name='productionreport',
            index=models.Index(fields=['report_date'], name='production__report__dd7fd5_idx'),
        ),
    ]
