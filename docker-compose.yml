version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: bakery_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: bakery_db
      POSTGRES_USER: bakery_user
      POSTGRES_PASSWORD: bakery_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - bakery_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bakery_user -d bakery_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: bakery_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - bakery_network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Web Application
  web:
    build: .
    container_name: bakery_web
    restart: unless-stopped
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-here
      - DATABASE_URL=postgresql://bakery_user:bakery_password@db:5432/bakery_db
      - REDIS_URL=redis://:redis_password@redis:6379/0
      - ALLOWED_HOSTS=localhost,127.0.0.1,your-domain.com
      - CORS_ALLOWED_ORIGINS=http://localhost:3000,https://your-domain.com
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bakery_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 bakery_management.wsgi:application"

  # Celery Worker (for background tasks)
  celery_worker:
    build: .
    container_name: bakery_celery_worker
    restart: unless-stopped
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-here
      - DATABASE_URL=postgresql://bakery_user:bakery_password@db:5432/bakery_db
      - REDIS_URL=redis://:redis_password@redis:6379/0
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - bakery_network
    command: celery -A bakery_management worker -l info

  # Celery Beat (for scheduled tasks)
  celery_beat:
    build: .
    container_name: bakery_celery_beat
    restart: unless-stopped
    environment:
      - DEBUG=False
      - SECRET_KEY=your-production-secret-key-here
      - DATABASE_URL=postgresql://bakery_user:bakery_password@db:5432/bakery_db
      - REDIS_URL=redis://:redis_password@redis:6379/0
    volumes:
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    networks:
      - bakery_network
    command: celery -A bakery_management beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bakery_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/var/www/static
      - media_volume:/var/www/media
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
    networks:
      - bakery_network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local

networks:
  bakery_network:
    driver: bridge 