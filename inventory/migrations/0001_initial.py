# Generated by Django 5.2 on 2025-06-25 19:51

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Ürün Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('adet', 'Adet'), ('porsiyon', 'Porsiyon'), ('litre', 'Litre'), ('gram', 'Gram'), ('paket', 'Paket')], default='adet', max_length=20, verbose_name='Birim')),
                ('price_per_unit', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Birim Fiyat')),
                ('cost_per_unit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Birim Maliyet')),
                ('barcode', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Barkod')),
                ('sku', models.CharField(max_length=50, unique=True, verbose_name='Stok Kodu')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('is_produced', models.BooleanField(default=True, help_text='Bu ürün kendi üretimimiz mi?', verbose_name='Üretiliyor')),
                ('shelf_life_days', models.IntegerField(default=7, help_text='Ürünün raf ömrü', verbose_name='Raf Ömrü (Gün)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Ürün',
                'verbose_name_plural': 'Ürünler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Kategori Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
            ],
            options={
                'verbose_name': 'Ürün Kategorisi',
                'verbose_name_plural': 'Ürün Kategorileri',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Mevcut Miktar')),
                ('reserved_quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Siparişler için rezerve edilen miktar', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Rezerve Miktar')),
                ('minimum_stock', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Minimum Stok')),
                ('maximum_stock', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Maksimum Stok')),
                ('last_updated', models.DateTimeField(auto_now=True, verbose_name='Son Güncelleme')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='users.branch', verbose_name='Şube')),
                ('last_updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Güncelleyen')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='inventory.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Stok',
                'verbose_name_plural': 'Stoklar',
                'ordering': ['branch', 'product'],
                'unique_together': {('branch', 'product')},
            },
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to='inventory.productcategory', verbose_name='Kategori'),
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Reçete Adı')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('yield_quantity', models.DecimalField(decimal_places=2, help_text='Bu reçeteden kaç birim ürün çıkar', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Çıkan Miktar')),
                ('preparation_time', models.IntegerField(default=0, verbose_name='Hazırlık Süresi (dakika)')),
                ('cooking_time', models.IntegerField(default=0, verbose_name='Pişirme Süresi (dakika)')),
                ('instructions', models.TextField(blank=True, verbose_name='Yapılış Talimatları')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Güncellenme Tarihi')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recipe', to='inventory.product', verbose_name='Ürün')),
            ],
            options={
                'verbose_name': 'Reçete',
                'verbose_name_plural': 'Reçeteler',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('in', 'Giriş'), ('out', 'Çıkış'), ('transfer', 'Transfer'), ('production', 'Üretim'), ('sale', 'Satış'), ('waste', 'İmha'), ('adjustment', 'Düzeltme')], max_length=20, verbose_name='Hareket Tipi')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Miktar')),
                ('reference_number', models.CharField(blank=True, max_length=50, verbose_name='Referans No')),
                ('notes', models.TextField(blank=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movements', to='inventory.inventory', verbose_name='Stok')),
            ],
            options={
                'verbose_name': 'Stok Hareketi',
                'verbose_name_plural': 'Stok Hareketleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WasteRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='İmha Miktarı')),
                ('reason', models.CharField(choices=[('expired', 'Son Kullanma Tarihi Geçmiş'), ('damaged', 'Hasar'), ('quality', 'Kalite Sorunu'), ('overproduction', 'Aşırı Üretim'), ('customer_return', 'Müşteri İadesi'), ('other', 'Diğer')], max_length=20, verbose_name='İmha Sebebi')),
                ('description', models.TextField(blank=True, verbose_name='Açıklama')),
                ('cost_impact', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='İmha edilen ürünün maliyet değeri', max_digits=10, verbose_name='Maliyet Etkisi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='İmha Tarihi')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Oluşturan')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='waste_records', to='inventory.inventory', verbose_name='Stok')),
            ],
            options={
                'verbose_name': 'İmha Kaydı',
                'verbose_name_plural': 'İmha Kayıtları',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.001'))], verbose_name='Miktar')),
                ('unit', models.CharField(choices=[('kg', 'Kilogram'), ('adet', 'Adet'), ('porsiyon', 'Porsiyon'), ('litre', 'Litre'), ('gram', 'Gram'), ('paket', 'Paket')], max_length=20, verbose_name='Birim')),
                ('notes', models.CharField(blank=True, max_length=200, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='used_in_recipes', to='inventory.product', verbose_name='Malzeme')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='inventory.recipe', verbose_name='Reçete')),
            ],
            options={
                'verbose_name': 'Reçete Malzemesi',
                'verbose_name_plural': 'Reçete Malzemeleri',
                'unique_together': {('recipe', 'ingredient')},
            },
        ),
    ]
